from loader import bot
from telegram_bot_calendar import DetailedTelegramCalendar
import datetime
from utils.calendars import translate_y_m_d
from loader import nasa_key, cosmo_url
from api.request import get_response, get_json, get_galaxy_data
from handlers.custom_handlers.handler_db import return_database


@bot.message_handler(commands=["üåå–ì–∞–ª–∞–∫—Ç–∏–∫–∏üåå"])
def check_in_calendar(message: Message) -> None:
    """–•–µ–Ω–¥–ª–µ—Ä –∫–æ—Ç–æ—Ä—ã–π –ª–æ–≤–∏—Ç –∫–æ–º–∞–Ω–¥—É –ì–∞–ª–∞–∫—Ç–∏–∫–∏ –∏ —Å–æ–∑–¥–∞–µ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—å"""
    calendar, step = DetailedTelegramCalendar(calendar_id=1,
                                              min_date=datetime.date(1995, 1, 1),
                                              max_date=datetime.date.today()).build()
    bot.send_message(message.from_user.id,
                     f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è\n\n–í—ã–±–µ—Ä–∏—Ç–µ {translate_y_m_d()[step]}üìÜ",
                     reply_markup=calendar)


@bot.callback_query_handler(func=DetailedTelegramCalendar.func(calendar_id=1))
def check_in(call):
    """–ö–æ–ª–±–µ–∫ —Ö–µ–Ω–¥–ª–µ—Ä –∫–æ—Ç–æ—Ä—ã–π –±–µ—Ä–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∞—Ç—ã –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è"""
    """–∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –≤ request –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ api"""
    """–í–æ–∑–≤—Ä–∞—â–∞e—Ç –¥–∞–Ω–Ω—ã–µ —Å —Å–∞–π—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    result, key, step = DetailedTelegramCalendar(calendar_id=1, locale="ru",
                                                 min_date=datetime.date(1995, 1, 1),
                                                 max_date=datetime.date.today()).process(call.data)
    if not result and key:
        bot.edit_message_text(f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è\n\n–í—ã–±–µ—Ä–∏—Ç–µ {translate_y_m_d()[step]}üìÜ",
                              call.message.chat.id,
                              call.message.message_id,
                              reply_markup=key)
    elif result:
        bot.edit_message_text(text=f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {result.strftime('%d-%m-%Y')}üìÜ\n–ü–µ—Ä–µ–≤–æ–∂—É —Å—Ç—Ä–∞–Ω–∏—á–∫—É, —Å–µ–∫—É–Ω–¥–æ—á–∫—É...üñå",
                              chat_id=call.message.chat.id,
                              message_id=call.message.message_id)
        response = get_response(cosmo_url(nasa_key, result))
        if response is not None:
            json = get_json(get_response(cosmo_url(nasa_key, result)))[0]
            if len(json) == 0 or "url" not in json.keys():
                bot.edit_message_text(
                    text=f"–ù–∞ –¥–∞—Ç—É {result.strftime('%d-%m-%Y')} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∏—Å–∫",
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id)
            else:
                title = get_galaxy_data(get_json(get_response(cosmo_url(nasa_key, result))))['–ì–∞–ª–∞–∫—Ç–∏–∫–∞']
                link = get_galaxy_data(get_json(get_response(cosmo_url(nasa_key, result))))['–°—Å—ã–ª–∫–∞']
                description = get_galaxy_data(get_json(get_response(cosmo_url(nasa_key, result))))['–û–ø–∏—Å–∞–Ω–∏–µ']
                bot.edit_message_text(text=f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–∞—Ç—É {result.strftime('%d-%m-%Y')}üìÜ\n\n"
                                           f"{title}\n\n"
                                           f"{link}\n\n"
                                           f"{description}",
                                      chat_id=call.message.chat.id,
                                      message_id=call.message.message_id)
                return_database(call, '–ì–∞–ª–∞–∫—Ç–∏–∫–∏', str(result.strftime('%d-%m-%Y')),
                                f"{title}",
                                f"{link}")
        else:
            bot.edit_message_text(text=f"–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–∞ {result.strftime('%d-%m-%Y')}, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –¥–∞—Ç—É",
                                  chat_id=call.message.chat.id,
                                  message_id=call.message.message_id)